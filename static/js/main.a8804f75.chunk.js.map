{"version":3,"sources":["Components/List.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","className","area-hidden","onClick","onSelect","id","text","App","useState","input","setinput","output","setoutput","Clicked","itemss","filter","arrEl","index","type","placeholder","onChange","e","target","value","name","map","items","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAEe,SAASA,EAAKC,GAEzB,OAAO,8BAEH,+BAEA,mBAAGC,UAAU,cAAcC,cAAY,OAAOC,QAAS,WACnDH,EAAMI,SAASJ,EAAMK,OAHzB,KAKUL,EAAMM,KACjB,4BC8DQC,MAhEf,SAAaP,GAAQ,IAAD,EACKQ,mBAAS,IADd,mBACXC,EADW,KACLC,EADK,OAEOF,mBAAS,IAFhB,mBAEXG,EAFW,KAEJC,EAFI,KAiBlB,SAASC,EAAQR,GAEfO,GAAU,SAACE,GACf,OACIA,EAAOC,QAAO,SAACC,EAAMC,GACnB,OAAOA,IAASZ,QAYpB,OACA,mCACA,qBAAKJ,UAAU,MAAf,SACA,sBAAKA,UAAU,UAAf,UACE,4CACA,uBAAOiB,KAAK,OAAOjB,UAAU,SAASkB,YAAY,uBAAuBC,SAlC3E,SAAgBC,GACdX,EAASW,EAAEC,OAAOC,QAiCyEA,MAAOd,EAAQe,KAAK,OAAOnB,GAAG,KAF3H,IAEgI,wBAAQF,QA9BxI,WACAS,GAAU,SAACE,GACT,MAAM,GAAN,mBAAUA,GAAV,CAAiBL,OAEnBC,EAAS,KA0BsJT,UAAU,MAAzC,gBAC9H,uBACA,6BACGU,EAAOc,KAAI,SAACC,EAAMT,GAClB,OACC,qCACI,uBACC,cAAClB,EAAD,CAAMO,KAAMoB,EACZrB,GAAIY,EAEJb,SAAUS,GADLI,GAIJ,uCClDCU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a8804f75.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function List(props) {\r\n  \r\n    return(<div>\r\n     \r\n        <li>\r\n\r\n        <i className=\"fa fa-times\" area-hidden=\"true\" onClick={()=>{\r\n            props.onSelect(props.id)\r\n\r\n        }}></i>  {props.text}\r\n       <br/>\r\n        </li>\r\n        </div>\r\n    )\r\n}\r\n","\nimport { useState } from 'react';\nimport './App.css';\nimport Digitalclock from './Components/digitalclock';\nimport List from './Components/List';\n\n\n\n\n\nfunction App(props) {\n  const [input,setinput]=useState(\"\")\n  const [output,setoutput]=useState([]) \n\n\n  function Change(e){\n    setinput(e.target.value)\n \n  }\n  function ClickHandler(){\n  setoutput((itemss)=>{\n    return[...itemss,input]\n  })\n  setinput(\"\")\n  \n  \n  }\n  function Clicked(id){\n \n    setoutput((itemss)=>{\nreturn(\n    itemss.filter((arrEl,index)=>{\n      return index !==id;\n    }\n    )\n)\n\n    }\n    )\n\n\n  }\n        \n\n  return (\n  <>\n  <div className=\"app\">\n  <div className=\"MainDiv\">\n    <h1>My ToDoApp</h1>\n    <input type=\"text\" className=\"border\" placeholder=\"   Enter To Do Items\" onChange={Change} value={input}  name=\"todo\" id=\"\"/> <button onClick={ClickHandler} className=\"add\"> +</button>\n    <hr/>\n    <ol>\n      {output.map((items,index)=>{\n       return(\n        <>\n            <br/>\n             <List text={items}\n             id={index}\n             key={index}\n             onSelect={Clicked}\n             \n             />\n              <br/>\n          </>   \n       )\n      })}\n      </ol>\n     \n  </div>\n  </div>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}